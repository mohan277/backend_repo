{"filter":false,"title":"models.py","tooltip":"/models.py","undoManager":{"mark":5,"position":5,"stack":[[{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"insert","lines":["",""],"id":3},{"start":{"row":1,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["",""]},{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":0,"column":0},"end":{"row":24,"column":0},"action":"insert","lines":["review session","1. After watching the screen we have to see what data we have to give.","2. Next what fields we have to give.","3. paginated results.","4. Next  note down the requests clearly whether it is required or not.","5. Note down the actions in the screen.","6. we have to ensure we are giving necessary information or not to frontend.","7. enums should be in CAPITAL SNAKE_CASE = \"SNAKE_CASE\".","8. Avoid nested dto's from storage implementation.","9. It is not a problem to send nested dto's to presenter.","10. Convert the dictionary into dto and pass to the interactor.(if the data contains more than three or more fields.).","","","","1. validate every data  what we are taking from client.","2. set default values if the client is not given(limit and offset values).","3. Tests : ","    1. test every bussiness logic in the interactor.","4. Models:","    1. maximum will cover on requirements.","        1. list down the entities.","        2. decide the realtions and map the relations.","        3. relation should be in between rows, but not in between tables.","        4. ",""],"id":4}],[{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"insert","lines":["",""],"id":5},{"start":{"row":1,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["",""]},{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["",""]},{"start":{"row":3,"column":0},"end":{"row":4,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":0,"column":0},"end":{"row":60,"column":0},"action":"insert","lines":["Devoloping software efficiently:","1. Time","2. Cost","","soft -- Easily changeable & Easily understandable","ware -- Tool/Product","Hard -- Difficult to change","ware -- Product/Device","","To satisfy the needs of the customers through the frequent updates","","Effective_software: (time and cost)","cost/LOC -- cost to change the LOC(line of code)","","A software will go through some feedback loops before final release","","latency --","","Making changes:","1. Finding the different places where we have to change the code","2. Don't break any functionality.","3. Core functionality of the software is coupled with database operations.","","software has two characteristics -","1. structure - easy  to read and change ","2. Behaviour - functionality","","","","","Clean Architecture:","clean architecture is a way of building best well structured software","","1. Interactors","2. Storages","3. ","","","ignore adapters -- it is used for multiple apps","api_specs -- copy from fb post learning","conf -- ","constants -- ","\tconstants","\tenums ","\texceptions -- ","\t"," dtos:","\tignore entities","storages :","\tdto - storage related dto's","","tests :","\tignore entities","","utils: ","\tbusiness logic","","","","",""],"id":6}],[{"start":{"row":24,"column":39},"end":{"row":24,"column":40},"action":"remove","lines":[" "],"id":7},{"start":{"row":35,"column":2},"end":{"row":35,"column":3},"action":"remove","lines":[" "]},{"start":{"row":40,"column":7},"end":{"row":40,"column":8},"action":"remove","lines":[" "]},{"start":{"row":41,"column":12},"end":{"row":41,"column":13},"action":"remove","lines":[" "]},{"start":{"row":43,"column":6},"end":{"row":43,"column":7},"action":"remove","lines":[" "]},{"start":{"row":44,"column":14},"end":{"row":44,"column":15},"action":"remove","lines":[" "]},{"start":{"row":45,"column":0},"end":{"row":45,"column":1},"action":"remove","lines":["\t"]},{"start":{"row":54,"column":6},"end":{"row":54,"column":7},"action":"remove","lines":[" "]},{"start":{"row":80,"column":10},"end":{"row":80,"column":11},"action":"remove","lines":[" "]},{"start":{"row":87,"column":10},"end":{"row":87,"column":11},"action":"remove","lines":[" "]}],[{"start":{"row":37,"column":0},"end":{"row":37,"column":1},"action":"insert","lines":["l"],"id":8},{"start":{"row":37,"column":1},"end":{"row":37,"column":2},"action":"insert","lines":["c"]},{"start":{"row":37,"column":2},"end":{"row":37,"column":3},"action":"insert","lines":["s"]},{"start":{"row":37,"column":3},"end":{"row":37,"column":4},"action":"insert","lines":["b"]},{"start":{"row":37,"column":4},"end":{"row":37,"column":5},"action":"insert","lines":["j"]},{"start":{"row":37,"column":5},"end":{"row":37,"column":6},"action":"insert","lines":["s"]}]]},"ace":{"folds":[],"scrolltop":846,"scrollleft":0,"selection":{"start":{"row":47,"column":16},"end":{"row":47,"column":16},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":true,"wrapToView":true},"firstLineState":{"row":46,"state":"start","mode":"ace/mode/python"}},"timestamp":1593258894577,"hash":"0fca4bd259eabe2d9e0c9808b33a2bbf0f1c3657"}